# -*- coding: utf-8 -*-
"""Edadil.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1MUKNqUnPLK7W8Jko3Wpp9NaKUS4jY6MS
"""
import datetime

import until as until
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.common.by import By
from selenium.webdriver.support import expected_conditions as EC
import time
# !pip install selenium
# !apt-get update # to update ubuntu to correctly run apt install
# !apt install chromium-chromedriver
# !cp /usr/lib/chromium-browser/chromedriver /usr/bin
# import sys
# sys.path.insert(0,'/usr/lib/chromium-browser/chromedriver')
from selenium import webdriver
from selenium.webdriver.common.keys import Keys
# from selenium.webdriver import ActionChains
import pandas as pd


chrome_options = webdriver.ChromeOptions()
chrome_options.add_argument('--headless')
chrome_options.add_argument('--start-fullscreen')

chrome_options.add_argument('--no-sandbox')
# chrome_options.add_argument('--incognito')
# chrome_options.add_argument("--disable-images")
chrome_options.add_argument("--disable-popup-blocking")
chrome_options.add_argument('--disable-dev-shm-usage')
chrome_options.add_argument(
    'user-agent="Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36"')
# chrome_options.add_argument('--parent-window')
wd = webdriver.Chrome('C:\install\chromedriver.exe', chrome_options=chrome_options)

wd.set_window_size(1920, 1080)
wd.get("https://edadeal.ru/")


def set_city(city):
    element = WebDriverWait(wd, 20).until(EC.presence_of_element_located((By.CLASS_NAME, "b-root__modal")))
    element.find_elements_by_class_name("b-button__content")[1].click()

    wd.find_element_by_class_name("b-root__location-suggest-input").send_keys(city)
    wd.implicitly_wait(1)
    cl_city = wd.find_elements_by_class_name("b-root__location-name")
    if len(cl_city) > 1:
        cl_city[1].click()
    else:
        cl_city[0].click()


def process_price(prices):
    prices = prices[0].split('\n')
    return prices


def search(product):
    search_el = wd.find_element_by_class_name("b-header__search-input")
    search_el.send_keys(Keys.CONTROL + "a")
    search_el.send_keys(Keys.BACKSPACE)
    time.sleep(0.2)
    search_el.send_keys(product, Keys.ENTER)

    all = wd.find_elements_by_css_selector(".p-offers__offers a")

    shop_list, price_low, price_high, name_list = [], [], [], []
    discount_list, dates_end_list, quantity_list, links_list = [], [], [], []

    for el in all:
        discount = None
        try:
            shop = el.find_element_by_css_selector(".b-offer__dates div").get_attribute("title")
            name = el.find_element_by_class_name("b-offer__description").text
            price = [i.text for i in el.find_elements_by_class_name("b-offer__prices")]
            discount = el.find_element_by_class_name("b-offer__badge").text
            dates_end = el.find_element_by_class_name("b-offer__dates").text
            quantity = el.find_element_by_class_name("b-offer__quantity").text
            links = el.get_attribute("href")
        except Exception as ex:
            print(ex)


        shop_list.append(shop)
        name_list.append(name)
        price_low.append(process_price(price)[0])
        if len(process_price(price)) > 1:
            price_high.append(process_price(price)[1])
        else:
            price_high.append(None)
        discount_list.append(discount)
        dates_end_list.append(dates_end)
        quantity_list.append(quantity)
        links_list.append(links)
    # добавить дату сбора данных
    data = pd.DataFrame({"Название": name_list,
                         "Цена со скидкой": price_low,
                         "Цена без скидки": price_high,
                         "Магазин": shop_list,
                         "Скидка": discount_list,
                         "Дата окончания": dates_end_list,
                         "кол-во/за кг": quantity_list,
                         "ссылка": links_list,
                         "Дата запроса": datetime.date.today()
                         })
    # wd.save_screenshot("ss.png")
    return data

rez_list = []

# request_list = ["Творог", "Пельмени", "Помидоры", "Молоко", "Перец"]

with open("Список_покупок.txt", "r", encoding="utf-8") as list_open:
    request_list = list_open.read().split(',')
city = 'Канск'
set_city(city)
# добавление колонки с поиском для сортировки
for i in request_list:
    rez = search(str(i))
    rez['Запрос'] = i
    rez_list.append(rez)

wd.close()
#соединение df
a = pd.concat([i for i in rez_list], ignore_index=True) # .loc[:5]
# pd.set_option('display.max_columns', None)
# pd.set_option('display.max_rows', None)
print(a)
#запись в файл
date = datetime.date.today()
a.to_csv(f'data/{city}_data_{date}.csv')

